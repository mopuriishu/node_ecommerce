npm init -y
npm install --save express
 npm install -g nodemon
 app.METHOD(path,HANDLER)

Postman:-
 post->body->raw->json(application/json)

 req.body ->  rea.json

 oncoming->req




 // router.get('/',(req, res) => {
//     Product.find().then((product) => {
//         res.send(product);
//     }).catch( (err) => {
//         res.send(err)
//     })
// })
router.get('/',(req, res) => {
    Product.find().populate('category').then((product) => {
        res.send(product);
    }).catch( (err) => {
        res.send(err)
    })
})
//object --> instan,--> save
//static

router.post('/', (req, res) => {
    let body = req.body;
    let product = new Product(body);
    product.save().then((product)=>{
        res.send(product)
    }).catch((err) => {
        res.send(err)
    })
})

// router.get('/:id', (req, res) => {
//     let id = req.params.id;
//     Product.findById().then((product) => {
//         res.send(product);
//     }).catch( (err) => {
//         res.send(err)
//     })
// })

router.get('/:id', (req, res) => {
    let id = req.params.id;
    Product.findById(id).populate('category').then((product) => {
        if(!product){
            res.send({
                notice: 'record not found'
            })
        }
        res.send(product);
    }).catch( (err) => {
        res.send(err)
    })
})


// OWN INSTANCE METHODS
// products/id/short
// info of product like the name id and price

router.get('/:id/short', (req,res) => {
    let id = req.params.id;
    Product.findById(id).then((product) => {
        //introducing own instance method
        res.send(product.shortInfo());
    })
})

// INSTANCE METHOD USAGE ON COLLECTION
// products/short/all
router.get('/short/all', (req,res) => {
    Product.find().then((products)=>{
        res.send(products.map(product => product.shortInfo()));
    })
})

 